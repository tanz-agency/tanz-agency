@function convertify($number) {
    @if type-of($number) == "number" and unitless($number) {
        @return percentage($number / $grid-column-count);
    }

    @return $number;
}

@mixin container() {
    flex-grow: 1;

    margin: 0 auto;
    padding-left: $container-gutter-mobile;
    padding-right: $container-gutter-mobile;

    max-width: $page-width + $container-gutter-mobile;

    @media (min-width: $min-mobile) {
        max-width: $page-width + $container-gutter-mobile * 2;
    }

    @media (min-width: $min-tablet) {
        padding-left: $container-gutter-tablet;
        padding-right: $container-gutter-tablet;
        max-width: $page-width + $container-gutter-tablet * 2;
    }

    @media (min-width: $min-desktop) {
        padding-left: $container-gutter-desktop;
        padding-right: $container-gutter-desktop;
        max-width: $page-width + $container-gutter-desktop * 2;
    }
}

@mixin row($direction: ltr, $align: stretch, $justify: flex-start, $grid-gutter: $gutter, $wrap: wrap) {
    display: flex;
    flex-wrap: $wrap;

    align-items: $align;
    justify-content: $justify;

    @if $direction == ltr {
        flex-direction: row;
    } @else {
        flex-direction: row-reverse;
    }
}

@mixin col($width: 100%, $align: stretch, $grid-gutter: $gutter) {
    flex: none;
    align-self: $align;

    padding-left: $grid-gutter/2;
    padding-right: $grid-gutter/2;

    width: convertify($width);
}

@mixin grid-offset-left($offset: 1) {
    margin-left: convertify($offset);
}

@mixin grid-offset-right($offset: 1) {
    margin-right: convertify($offset);
}

.container {
    @include container();
}

.row {
    @include row();
}

.col {
    @include col();
}
